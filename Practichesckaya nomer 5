#include<bits/stdc++.h>

using namespace std;

class BankAccount {

    friend bool transfer(BankAccount& from, BankAccount& to, double amount);

private:
    int accountNumber;
    double balance;
    double interestRate;

public:
    BankAccount(int accNum, double bal) {
        this->accountNumber = accNum;
        this->balance = bal;
        this->interestRate = 0;
        cout << "Аккаунт создан.\n";
    }

    double deposit(double money) {
        balance += money;
        cout << "Был внесен депозит на " << accountNumber << " на сумму " << money << " .\n";
        getBalance();
        return balance; }

    double withdraw(double money) {
        if ((balance - money) >= 0) { 
            balance -= money;
            cout << "Были сняты деньги с " << accountNumber << " на сумму " << money << " .\n";
            getBalance();
            return balance; }
        cout << "Недостатоно средств на аккаунте.\n";
        return -1;
    }

    double getBalance() {
        cout << "Текущий баланс: " << balance << "\n";
        return balance; }

    double getInterest() {
        double interest = balance * interestRate * (1.0/12);
        cout << "Процент на " << accountNumber << " равны " << interest << " .\n";
        return balance * interestRate * (1 / 12); }

    double setInterestRate(double interRt) {
        cout << "Была установлена новая ставка на " << accountNumber << " в размере " << interRt << " .\n";
        interestRate = interRt;
        return interestRate;
    }
    int getAccountNumber() {
        cout << "Аккаунт номер: " << accountNumber << "\n";
        return accountNumber; }
};
bool transfer(BankAccount& from, BankAccount& to, double amount)
{
    if (from.withdraw(amount) >= 0) { to.deposit(amount); return true; }
    return false;
}
int main() {
    setlocale(LC_ALL, "Russian");

   
    
    BankAccount account(383728, 2948.5);
    BankAccount account1(328623, 3473.6);
   /* transfer(account, account1, 3000);
    transfer(account, account1, 300000);
    account_one.deposit(32143.23);
    account_one.withdraw(321.23);
    account_one.getInterest();
    account_one.setInterestRate(2.6);
    account_one.getInterest();*/
    int choice;
    double amount;
    double newInterestRate;

    do {
        std::cout << "Выберите действие:" << std::endl;
        std::cout << "1. Внести средства" << std::endl;
        std::cout << "2. Снять средства" << std::endl;
        std::cout << "3. Перевод" << std::endl;
        std::cout << "4. Проверить баланс" << std::endl;
        std::cout << "5. Установить процентную ставку" << std::endl;
        std::cout << "6. Рассчитать проценты" << std::endl;
        std::cout << "7. Выход" << std::endl;
        std::cin >> choice;

        switch (choice) {
        case 1:
            std::cout << "Введите сумму для внесения: ";
            std::cin >> amount;
            account.deposit(amount);
            break;
        case 2:
            std::cout << "Введите сумму для снятия: ";
            std::cin >> amount;
            account1.withdraw(amount);
            break;
        case 3:
            int num1;
            int num2;
            std::cout << "Введите сумму для перевода: ";
            std::cin >> amount;
            std::cout << "Номер счета для списания: ";
            std::cin >> num1;
            std::cout << "Номер счета для пополнения: ";
            std::cin >> num2;
            if (num1 == account.getAccountNumber()) {
                transfer(account, account1, amount);
             if (num2 == account1.getAccountNumber()) {
                transfer(account, account1, amount);
            }
            }
            else {
                std::cout << "Один или оба счета не найдены." << std::endl;
            }
            break;
        case 4:
            std::cout << "Баланс на счете 1: " << account1.getBalance() << std::endl;
            break;
        case 5:
            std::cout << "Введите новую процентную ставку: ";
            std::cin >> newInterestRate;
            account1.setInterestRate(newInterestRate);
            break;
        case 6:
            std::cout << "Проценты на счете 1: " << account1.getInterest() << std::endl;
            break;
        case 7:
            std::cout << "Завершение программы." << std::endl;
            break;
        default:
            std::cout << "Неверный выбор. Попробуйте снова." << std::endl;
        }
    } while (choice != 7);

    return 0;
}
